{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sleeps/ft_transcendence0/src/app/%28main%29/play/tournament/TournamentBracket.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport {MATCH_STATES} from '../../../../data/mockData';\n\nexport function MobileBracket({ \n  rounds,\n  currentRound,\n  getMatch,\n  getMatchStateStyle,\n  participants,\n  getPlayerStyle,\n  getPlayerBgStyle,\n  onPlayMatch,\n  tournamentSize \n}) {\n  const getPlayerDisplayName = (player) => {\n    if (!player) return \"TBD\";\n    if (player.nickname) return `${player.name} \"${player.nickname}\"`;\n    return player.name;\n  };\n\n  return (\n    <div className=\"flex flex-col items-center mt-4 p-2 bg-gray-800/80 rounded-lg border border-gray-700 w-full\">\n      <h3 className=\"text-white text-xl mb-3 text-center\">Tournament Bracket</h3>\n      <div className=\"text-white text-sm mb-2\">Current Round: {currentRound + 1}</div>\n      \n      {/* Mobile vertical bracket */}\n      <div className=\"flex flex-col w-full space-y-4\">\n        {Array.from({ length: rounds }).map((_, roundIndex) => {\n          const matchesInRound = tournamentSize / Math.pow(2, roundIndex + 1);\n          \n          return (\n            <div key={`round-${roundIndex}`} className=\"w-full\">\n              <div className=\"text-indigo-300 text-sm font-medium mb-2 pl-1\">\n                {roundIndex === rounds - 1 ? \"Final\" : \n                  roundIndex === rounds - 2 ? \"Semi Finals\" : \n                  `Round ${roundIndex + 1}`}\n              </div>\n              \n              <div className=\"flex flex-col space-y-3\">\n                {Array.from({ length: matchesInRound }).map((_, matchIndex) => {\n                  const match = getMatch(roundIndex, matchIndex);\n                  const matchStateClass = match ? getMatchStateStyle(match.state) : \"border-green-400/50 bg-gray-700/50\";\n                  const isCurrentRound = roundIndex === currentRound;\n                  \n                  // Get players for this match\n                  let player1, player2;\n                  \n                  if (roundIndex === 0) {\n                    // First round pulls directly from participants\n                    const player1Index = matchIndex * 2;\n                    const player2Index = player1Index + 1;\n                    player1 = player1Index < participants.length ? participants[player1Index] : null;\n                    player2 = player2Index < participants.length ? participants[player2Index] : null;\n                  } else {\n                    // Look for winners from previous round\n                    const prevRound = roundIndex - 1;\n                    const prevMatchIndex1 = matchIndex * 2;\n                    const prevMatchIndex2 = prevMatchIndex1 + 1;\n                    \n                    const prevMatch1 = getMatch(prevRound, prevMatchIndex1);\n                    const prevMatch2 = getMatch(prevRound, prevMatchIndex2);\n                    \n                    if (prevMatch1 && prevMatch1.state === MATCH_STATES.PLAYER1_WIN) {\n                      player1 = prevMatch1.player1;\n                    } else if (prevMatch1 && prevMatch1.state === MATCH_STATES.PLAYER2_WIN) {\n                      player1 = prevMatch1.player2;\n                    }\n                    \n                    if (prevMatch2 && prevMatch2.state === MATCH_STATES.PLAYER1_WIN) {\n                      player2 = prevMatch2.player1;\n                    } else if (prevMatch2 && prevMatch2.state === MATCH_STATES.PLAYER2_WIN) {\n                      player2 = prevMatch2.player2;\n                    }\n                  }\n                  \n                  const player1Style = match ? getPlayerStyle(match, true) : \"text-gray-300\";\n                  const player2Style = match ? getPlayerStyle(match, false) : \"text-gray-300\";\n                  \n                  const player1BgStyle = match ? getPlayerBgStyle(match, true) : \"\";\n                  const player2BgStyle = match ? getPlayerBgStyle(match, false) : \"\";\n\n                  const player1BorderColor = player1BgStyle.includes(\"bg-\") \n                    ? player1BgStyle.replace(\"bg-\", \"border-\") \n                    : \"border-green-400/50\";\n                  \n                  const player2BorderColor = player2BgStyle.includes(\"bg-\") \n                    ? player2BgStyle.replace(\"bg-\", \"border-\") \n                    : \"border-green-400/50\";\n                  \n                  return (\n                    <div \n                      key={`match-${roundIndex}-${matchIndex}`}\n                      className={`flex flex-col ${matchStateClass} rounded overflow-hidden ${isCurrentRound ? 'hover:brightness-110 transition-all cursor-pointer' : ''}`}\n                      onClick={() => isCurrentRound && match.player1 && match.player2 && onPlayMatch && onPlayMatch(match)}\n                    >\n                      {/* Match header */}\n                      <div className=\"bg-black text-gray-300 text-xs font-medium px-2 py-1 border-b border-gray-700\">\n                        Match {matchIndex + 1}\n                      </div>\n                      \n                      {/* Players container */}\n                      <div className=\"flex flex-col\">\n                        <div \n                          className={`py-2 px-3 border-b ${player1BorderColor} ${player1BgStyle}`}\n                        >\n                          <div className={`text-sm font-medium truncate ${player1Style}`}>\n                            {getPlayerDisplayName(player1)}\n                          </div>\n                        </div>\n                        <div className=\"h-px bg-gray-600 w-full\"></div>\n                        <div \n                          className={`py-2 px-3 ${player2BorderColor} ${player2BgStyle}`}\n                        >\n                          <div className={`text-sm font-medium truncate ${player2Style}`}>\n                            {getPlayerDisplayName(player2)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      \n      {/* Legend for bracket */}\n      <div className=\"flex flex-wrap items-center justify-center mt-4 text-xs space-x-2 space-y-1\">\n        <div className=\"flex items-center mt-1\">\n          <div className=\"w-3 h-3 rounded-full bg-gray-400 mr-1\"></div>\n          <span className=\"text-gray-300\">Waiting</span>\n        </div>\n        <div className=\"flex items-center\">\n          <div className=\"w-3 h-3 rounded-full bg-yellow-400 mr-1\"></div>\n          <span className=\"text-yellow-300\">In Progress</span>\n        </div>\n        <div className=\"flex items-center\">\n          <div className=\"w-3 h-3 rounded-full bg-green-400 mr-1\"></div>\n          <span className=\"text-green-300\">Winner</span>\n        </div>\n        <div className=\"flex items-center\">\n          <div className=\"w-3 h-3 rounded-full bg-red-400 mr-1\"></div>\n          <span className=\"text-red-300\">Eliminated</span>\n        </div>\n      </div>\n      \n      <div className=\"text-gray-400 text-xs mt-2\">Click on a match to simulate the game</div>\n    </div>\n  );\n}\n\nexport function DesktopBracket({\n    currentRound,\n    bracketHeight,\n    rounds,\n    roundWidth,\n    tournamentSize,\n    participants,\n    getMatch,\n    getMatchStateStyle,\n    getPlayerStyle,\n    getPlayerBgStyle,\n    onPlayMatch,\n    matchHeight\n}) {\n    const getPlayerDisplayName = (player) => {\n      if (!player) return \"TBD\";\n      if (player.nickname) return `${player.name} \"${player.nickname}\"`;\n      return player.name;\n    };\n    \n    // Increase match height for better visibility\n    const adjustedMatchHeight = matchHeight * 1.5;\n    \n    return (\n        <div className=\"flex flex-col items-center mt-4 p-4 overflow-x-auto w-full\">\n          <h3 className=\"text-white text-xl md:text-2xl mb-3 text-center\">Tournament Bracket</h3>\n          \n          <div className=\"relative min-w-full\" style={{ height: `${bracketHeight * 1.5}px`, minWidth: `${(rounds * 2 + 1) * roundWidth}px` }}>\n            {/* Left side of the bracket */}\n            {Array.from({ length: rounds }).map((_, roundIndex) => {\n              const matchesInRound = tournamentSize / Math.pow(2, roundIndex + 1);\n              \n              return (\n                <div \n                  key={`left-${roundIndex}`}\n                  className=\"absolute top-0 bottom-0 flex flex-col justify-around\"\n                  style={{ left: `${roundIndex * roundWidth}px`, width: `${roundWidth - 20}px` }}\n                >\n                  {Array.from({ length: matchesInRound / 2 }).map((_, matchIndex) => {\n                    const actualMatchIndex = matchIndex;\n                    const match = getMatch(roundIndex, actualMatchIndex);\n                    \n                    const matchStateClass = match ? getMatchStateStyle(match.state) : \"border-indigo-400/50 bg-gray-700/50\";\n                    const isCurrentRound = roundIndex === currentRound;\n                    \n                    // Get players for this match\n                    let player1, player2;\n                    \n                    if (roundIndex === 0) {\n                      // First round pulls directly from participants\n                      const player1Index = matchIndex * 2;\n                      const player2Index = player1Index + 1;\n                      player1 = player1Index < participants.length ? participants[player1Index] : null;\n                      player2 = player2Index < participants.length ? participants[player2Index] : null;\n                    } else {\n                      // Look for winners from previous round\n                      const prevRound = roundIndex - 1;\n                      const prevMatchIndex1 = matchIndex * 2;\n                      const prevMatchIndex2 = prevMatchIndex1 + 1;\n                      \n                      const prevMatch1 = getMatch(prevRound, prevMatchIndex1);\n                      const prevMatch2 = getMatch(prevRound, prevMatchIndex2);\n                      \n                      if (prevMatch1 && prevMatch1.state === MATCH_STATES.PLAYER1_WIN) {\n                        player1 = prevMatch1.player1;\n                      } else if (prevMatch1 && prevMatch1.state === MATCH_STATES.PLAYER2_WIN) {\n                        player1 = prevMatch1.player2;\n                      }\n                      \n                      if (prevMatch2 && prevMatch2.state === MATCH_STATES.PLAYER1_WIN) {\n                        player2 = prevMatch2.player1;\n                      } else if (prevMatch2 && prevMatch2.state === MATCH_STATES.PLAYER2_WIN) {\n                        player2 = prevMatch2.player2;\n                      }\n                    }\n                    \n                    player1 = match && match.player1 ? match.player1 : player1;\n                    player2 = match && match.player2 ? match.player2 : player2;\n                    \n                    const player1Style = match ? getPlayerStyle(match, true) : \"text-gray-300\";\n                    const player2Style = match ? getPlayerStyle(match, false) : \"text-gray-300\";\n                    \n                    const player1BgStyle = match ? getPlayerBgStyle(match, true) : \"\";\n                    const player2BgStyle = match ? getPlayerBgStyle(match, false) : \"\";\n\n                    const player1BorderColor = player1BgStyle.includes(\"bg-\") \n                      ? player1BgStyle.replace(\"bg-\", \"border-\") \n                      : \"border-indigo-400/50\";\n                    \n                    const player2BorderColor = player2BgStyle.includes(\"bg-\") \n                      ? player2BgStyle.replace(\"bg-\", \"border-\") \n                      : \"border-indigo-400/50\";\n                    \n                    return (\n                      <div \n                        key={matchIndex} \n                        className={`${matchStateClass} mb-6 rounded-lg shadow-lg overflow-hidden ${isCurrentRound ? 'hover:brightness-110 cursor-pointer transform hover:scale-105 transition-transform' : ''}`}\n                        onClick={() => isCurrentRound && match.player1 && match.player2 && onPlayMatch && onPlayMatch(match)}\n                      >\n                        {/* Match header */}\n                        <div className=\"bg-black text-gray-300 text-xs font-medium px-2 py-1 border-b border-gray-700\">\n                          Match {matchIndex + 1}\n                        </div>\n                        \n                        <div \n                          className={`p-2 ${player1BgStyle} border-b border-gray-600`}\n                          style={{ minHeight: `${adjustedMatchHeight/2}px` }}\n                        >\n                          <div className={`text-sm md:text-base truncate ${player1Style} font-medium`}>\n                            {getPlayerDisplayName(player1)}\n                          </div>\n                        </div>\n                        <div \n                          className={`p-2 ${player2BgStyle}`}\n                          style={{ minHeight: `${adjustedMatchHeight/2}px` }}\n                        >\n                          <div className={`text-sm md:text-base truncate ${player2Style} font-medium`}>\n                            {getPlayerDisplayName(player2)}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })}\n            \n            {/* Center/Final */}\n            <div \n              className=\"absolute top-0 bottom-0 flex flex-col justify-center\"\n              style={{ left: `${rounds * roundWidth}px`, width: `${roundWidth}px` }}\n            >\n              {/* Final match */}\n              {(() => {\n                const finalMatch = getMatch(rounds - 1, 0);\n                const isFinalCurrentRound = currentRound === rounds - 1;\n                \n                return (\n                  <div \n                    className={`shadow-lg ${\n                      finalMatch ? getMatchStateStyle(finalMatch.state) : \"border-yellow-400\"\n                    } rounded-lg mx-1 overflow-hidden flex flex-col ${isFinalCurrentRound ? 'hover:brightness-110 cursor-pointer transform hover:scale-105 transition-transform' : ''}`}\n                    onClick={() => isFinalCurrentRound && finalMatch && finalMatch.player1 && finalMatch.player2 && onPlayMatch && onPlayMatch(finalMatch)}\n                  >\n                    <div className=\"text-yellow-400 text-sm md:text-lg text-center font-bold bg-black p-2 border-b border-yellow-500/50\">\n                      FINAL\n                    </div>\n                    \n                    {/* Final Players */}\n                    {(() => {\n                      const player1 = finalMatch?.player1;\n                      const player2 = finalMatch?.player2;\n                      \n                      const player1Style = finalMatch ? getPlayerStyle(finalMatch, true) : \"text-gray-300\";\n                      const player2Style = finalMatch ? getPlayerStyle(finalMatch, false) : \"text-gray-300\";\n                      \n                      const player1BgStyle = finalMatch ? getPlayerBgStyle(finalMatch, true) : \"\";\n                      const player2BgStyle = finalMatch ? getPlayerBgStyle(finalMatch, false) : \"\";\n\n                      return (\n                        <>\n                          <div className={`p-3 ${player1BgStyle} border-b border-gray-600`} style={{ minHeight: `${adjustedMatchHeight/2}px` }}>\n                            <div className={`text-sm md:text-base text-center font-medium ${player1Style}`}>\n                              {getPlayerDisplayName(player1)}\n                            </div>\n                          </div>\n                          <div className={`p-3 ${player2BgStyle}`} style={{ minHeight: `${adjustedMatchHeight/2}px` }}>\n                            <div className={`text-sm md:text-base text-center font-medium ${player2Style}`}>\n                              {getPlayerDisplayName(player2)}\n                            </div>\n                          </div>\n                        </>\n                      );\n                    })()}\n                    \n                    {/* Champion */}\n                    {finalMatch && (finalMatch.state === MATCH_STATES.PLAYER1_WIN || \n                                                finalMatch.state === MATCH_STATES.PLAYER2_WIN) && (\n                      <div className=\"text-green-300 text-xs md:text-base border-t border-green-500/50 font-bold text-center p-2 bg-green-900/30\">\n                        Champion: {finalMatch.state === MATCH_STATES.PLAYER1_WIN \n                          ? getPlayerDisplayName(finalMatch.player1)\n                          : getPlayerDisplayName(finalMatch.player2)}\n                      </div>\n                    )}\n                  </div>\n                );\n              })()}\n            </div>\n\n            {/* Right side of the bracket */}\n            {Array.from({ length: rounds }).map((_, roundIndex) => {\n              const matchesInRound = tournamentSize / Math.pow(2, roundIndex + 1);\n              \n              return (\n                <div \n                  key={`right-${roundIndex}`}\n                  className=\"absolute top-0 bottom-0 flex flex-col justify-around\"\n                  style={{ left: `${(rounds * 2) * roundWidth - (roundIndex * roundWidth)}px`, width: `${roundWidth - 20}px` }}\n                >\n                  {Array.from({ length: matchesInRound / 2 }).map((_, matchIndex) => {\n                    // For the right side, we need to shift the matchIndex to the second half of matches in this round\n                    const actualMatchIndex = matchIndex + (matchesInRound / 2);\n                    const match = getMatch(roundIndex, actualMatchIndex);\n                    \n                    const matchStateClass = match ? getMatchStateStyle(match.state) : \"border-indigo-400/50 bg-gray-700/50\";\n                    const isCurrentRound = roundIndex === currentRound;\n                    \n                    // Get players for this match\n                    let player1, player2;\n                    \n                    if (roundIndex === 0) {\n                      // First round pulls directly from participants\n                      const halfPoint = participants.length / 2;\n                      const player1Index = halfPoint + (matchIndex * 2);\n                      const player2Index = player1Index + 1;\n                      player1 = player1Index < participants.length ? participants[player1Index] : null;\n                      player2 = player2Index < participants.length ? participants[player2Index] : null;\n                    } else {\n                      // Look for winners from previous round (right side)\n                      const prevRound = roundIndex - 1;\n                      const prevMatchesPerHalf = matchesInRound;\n                      const prevMatchIndex1 = prevMatchesPerHalf / 2 + (matchIndex * 2);\n                      const prevMatchIndex2 = prevMatchIndex1 + 1;\n                      \n                      const prevMatch1 = getMatch(prevRound, prevMatchIndex1);\n                      const prevMatch2 = getMatch(prevRound, prevMatchIndex2);\n                      \n                      if (prevMatch1 && prevMatch1.state === MATCH_STATES.PLAYER1_WIN) {\n                        player1 = prevMatch1.player1;\n                      } else if (prevMatch1 && prevMatch1.state === MATCH_STATES.PLAYER2_WIN) {\n                        player1 = prevMatch1.player2;\n                      }\n                      \n                      if (prevMatch2 && prevMatch2.state === MATCH_STATES.PLAYER1_WIN) {\n                        player2 = prevMatch2.player1;\n                      } else if (prevMatch2 && prevMatch2.state === MATCH_STATES.PLAYER2_WIN) {\n                        player2 = prevMatch2.player2;\n                      }\n                    }\n                    \n                    // Use match players if available\n                    player1 = match && match.player1 ? match.player1 : player1;\n                    player2 = match && match.player2 ? match.player2 : player2;\n                    \n                    const player1Style = match ? getPlayerStyle(match, true) : \"text-gray-300\";\n                    const player2Style = match ? getPlayerStyle(match, false) : \"text-gray-300\";\n                    \n                    const player1BgStyle = match ? getPlayerBgStyle(match, true) : \"\";\n                    const player2BgStyle = match ? getPlayerBgStyle(match, false) : \"\";\n\n                    const player1BorderColor = player1BgStyle.includes(\"bg-\") \n                      ? player1BgStyle.replace(\"bg-\", \"border-\") \n                      : \"border-indigo-400/50\";\n                    \n                    const player2BorderColor = player2BgStyle.includes(\"bg-\") \n                      ? player2BgStyle.replace(\"bg-\", \"border-\") \n                      : \"border-indigo-400/50\";\n                    \n                    return (\n                      <div \n                        key={matchIndex}\n                        className={`${matchStateClass} mb-6 rounded-lg shadow-lg overflow-hidden ${isCurrentRound ? 'hover:brightness-110 cursor-pointer transform hover:scale-105 transition-transform' : ''}`}\n                        onClick={() => isCurrentRound && match.player1 && match.player2 && onPlayMatch && onPlayMatch(match)}\n                      >\n                        {/* Match header */}\n                        <div className=\"bg-black text-gray-300 text-xs font-medium px-2 py-1 border-b border-gray-700\">\n                          Match {actualMatchIndex + 1}\n                        </div>\n                        \n                        <div \n                          className={`p-2 ${player1BgStyle} border-b border-gray-600`}\n                          style={{ minHeight: `${adjustedMatchHeight/2}px` }}\n                        >\n                          <div className={`text-sm md:text-base truncate ${player1Style} font-medium`}>\n                            {getPlayerDisplayName(player1)}\n                          </div>\n                        </div>\n                        <div \n                          className={`p-2 ${player2BgStyle}`}\n                          style={{ minHeight: `${adjustedMatchHeight/2}px` }}\n                        >\n                          <div className={`text-sm md:text-base truncate ${player2Style} font-medium`}>\n                            {getPlayerDisplayName(player2)}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          \n          {/* Legend for bracket */}\n          <div className=\"flex flex-wrap items-center justify-center mt-6 text-xs md:text-sm space-x-4 space-y-2 md:space-y-0\">\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-4 rounded-full bg-gray-400 mr-2\"></div>\n              <span className=\"text-gray-300\">Waiting</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-4 rounded-full bg-yellow-400 mr-2\"></div>\n              <span className=\"text-yellow-300\">In Progress</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-4 rounded-full bg-green-400 mr-2\"></div>\n              <span className=\"text-green-300\">Winner</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-4 rounded-full bg-red-400 mr-2\"></div>\n              <span className=\"text-red-300\">Eliminated</span>\n            </div>\n          </div>\n          \n          <div className=\"text-gray-400 text-sm mt-3\">Click on a match to simulate the game</div>\n        </div>\n      );\n}\n\nconst TournamentBracket = ({ \n  participants, \n  tournamentSize, \n  matches,  \n  currentRound, \n  onMatchUpdate,\n  onPlayMatch // <-- this prop is passed from LocalTournament\n}) => {\n  const [windowWidth, setWindowWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 1024);\nconst [isMobile, setIsMobile] = useState(typeof window !== 'undefined' ? window.innerWidth < 768 : false);\nconst [isTablet, setIsTablet] = useState(typeof window !== 'undefined' ? window.innerWidth >= 768 && window.innerWidth < 1024 : false);\n\nuseEffect(() => {\n  if (typeof window === 'undefined') return;\n    \n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n    setIsMobile(window.innerWidth < 768);\n    setIsTablet(window.innerWidth >= 768 && window.innerWidth < 1024);\n  };\n    \n  window.addEventListener('resize', handleResize);\n  return () => window.removeEventListener('resize', handleResize);\n}, []);\n\nconst validTournamentSize = (() => {\n  let size = 2;\n  while (size < participants.length) {\n    size *= 2;\n  }\n  return size;\n})();\n\nconst rounds = Math.log2(tournamentSize);\n\nconst getSpacing = () => {\n  if (windowWidth < 640) return { roundWidth: 80, matchHeight: 30, bracketHeight: rounds * 80 };\n  if (windowWidth < 768) return { roundWidth: 90, matchHeight: 32, bracketHeight: rounds * 90 };\n  if (windowWidth < 1024) return { roundWidth: 100, matchHeight: 35, bracketHeight: rounds * 100 };\n  return { roundWidth: 120, matchHeight: 40, bracketHeight: rounds * 120 };\n};\n  const { roundWidth, matchHeight, bracketHeight } = getSpacing();\n  \n  const getMatchStateStyle = (matchState) => {\n    switch(matchState) {\n      case MATCH_STATES.IN_PROGRESS:\n        return \"border-yellow-400 bg-yellow-900/30\";\n      case MATCH_STATES.PLAYER1_WIN:\n        return \"border-green-400 bg-green-900/30\";\n      case MATCH_STATES.PLAYER2_WIN:\n        return \"border-green-400 bg-green-900/30\";\n      default:\n        return \"border-indigo-400/50 bg-gray-700/50\";\n    }\n  };\n  \n  const getPlayerStyle = (match, isPlayer1) => {\n    if (!match || !match.state) return \"text-gray-300\";\n\n    const won = (match.state === MATCH_STATES.PLAYER1_WIN && isPlayer1) ||\n                (match.state === MATCH_STATES.PLAYER2_WIN && !isPlayer1);\n\n    const lost = (match.state === MATCH_STATES.PLAYER1_WIN && !isPlayer1) ||\n                 (match.state === MATCH_STATES.PLAYER2_WIN && isPlayer1);\n\n    if (won) return \"text-green-400 font-bold\";\n    if (lost) return \"text-red-400 line-through\";\n\n    if (match.state === MATCH_STATES.IN_PROGRESS) return \"text-yellow-300 italic\";\n    return \"text-gray-300\";\n  }\n  \n  const getPlayerBgStyle = (match, isPlayer1) => {\n    if (!match || !match.state) return \"\";\n  \n    const won = (match.state === MATCH_STATES.PLAYER1_WIN && isPlayer1) ||\n                (match.state === MATCH_STATES.PLAYER2_WIN && !isPlayer1);\n  \n    const lost = (match.state === MATCH_STATES.PLAYER1_WIN && !isPlayer1) ||\n                 (match.state === MATCH_STATES.PLAYER2_WIN && isPlayer1);\n  \n    if (won) return \"bg-green-900/30\";\n    if (lost) return \"bg-red-900/30 border-red-400\";\n  \n    if (match.state === MATCH_STATES.IN_PROGRESS) return \"bg-yellow-900/30 animate-pulse\";\n    return \"bg-gray-700/30\";\n  }\n  \n  const getMatch = (roundIndex, matchIndex) => {\n    return matches.find(m => \n      m.round === roundIndex && m.matchIndex === matchIndex\n    );\n  };\n  \n  // Remove simulateMatch and related logic.\n  // Instead, use onPlayMatch(match) for current round matches.\n\n  if (isMobile) {\n    return (\n      <MobileBracket \n        rounds={rounds}\n        currentRound={currentRound} \n        getMatch={getMatch} \n        getMatchStateStyle={getMatchStateStyle}\n        participants={participants}\n        getPlayerStyle={getPlayerStyle}\n        getPlayerBgStyle={getPlayerBgStyle}\n        onPlayMatch={onPlayMatch}\n        tournamentSize={validTournamentSize} \n      />\n    );\n  }\n  \n  return (\n    <DesktopBracket\n      currentRound={currentRound}\n      bracketHeight={bracketHeight}\n      rounds={rounds}\n      roundWidth={roundWidth}\n      tournamentSize={validTournamentSize}\n      participants={participants}\n      getMatch={getMatch}\n      getMatchStateStyle={getMatchStateStyle}\n      getPlayerStyle={getPlayerStyle}\n      getPlayerBgStyle={getPlayerBgStyle}\n      onPlayMatch={onPlayMatch}\n      matchHeight={matchHeight} \n    />\n  );\n};\n\nexport default TournamentBracket;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file:///home/sleeps/ft_transcendence0/src/app/%28main%29/play/game/PingPongGame.tsx"],"sourcesContent":["\n\"use client\";\nimport React, { useRef, useEffect, useState } from \"react\";\n\nconst GAME_RATIO = 16 / 9;\n\nconst GAME_WIDTH = 880;\nconst GAME_HEIGHT = 495; // 16:9 ratio\nconst PADDLE_WIDTH = 12;\nconst PADDLE_HEIGHT = 90;\nconst BALL_SIZE = 16;\nconst PADDLE_SPEED = 7;\nconst BALL_SPEED = 6;\n\nconst isMobile = () => typeof window !== 'undefined' && window.innerWidth < 640;\n\nexport const PingPongGame: React.FC<PingPongGameProps> = ({ \n  player1, \n  player2, \n  onExit, \n  isTournamentMode = false \n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [scores, setScores] = useState({ p1: 0, p2: 0 });\n  const [running, setRunning] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [mobile, setMobile] = useState(isMobile());\n  const [gameTime, setGameTime] = useState({ hours: 0, minutes: 0, seconds: 0 });\n  const gameStartTime = useRef<number | null>(null);\n  const [canvasDims, setCanvasDims] = useState<{ width: number; height: number }>({\n    width: GAME_WIDTH,\n    height: GAME_HEIGHT,\n  });\n\n  // Validate players have required properties\n  const safePlayer1 = {\n    id: player1?.id || crypto.randomUUID(),\n    name: player1?.name || 'Player 1',\n    avatar: player1?.avatar || '/mghalmi.jpg',\n    nickname: player1?.nickname || player1?.name || 'Player 1'\n  };\n\n  const safePlayer2 = {\n    id: player2?.id || crypto.randomUUID(),\n    name: player2?.name || 'Player 2',\n    avatar: player2?.avatar || '/mghalmi.jpg',\n    nickname: player2?.nickname || player2?.name || 'Player 2'\n  };\n\n  // Paddle positions: player1 left, player2 right\n  const paddle1Y = useRef<number>(GAME_HEIGHT / 2 - PADDLE_HEIGHT / 2);\n  const paddle2Y = useRef<number>(GAME_HEIGHT / 2 - PADDLE_HEIGHT / 2);\n  const ball = useRef({\n    x: GAME_WIDTH / 2 - BALL_SIZE / 2,\n    y: GAME_HEIGHT / 2 - BALL_SIZE / 2,\n    dx: BALL_SPEED * (Math.random() > 0.5 ? 1 : -1),\n    dy: BALL_SPEED * (Math.random() > 0.5 ? 1 : -1),\n  });\n  const keys = useRef<{ [key: string]: boolean }>({});\n\n  // Mobile paddle state\n  const [paddle1Move, setPaddle1Move] = useState<'' | 'up' | 'down'>('');\n  const [paddle2Move, setPaddle2Move] = useState<'' | 'up' | 'down'>('');\n\n  // Game timer\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    \n    if (gameStarted && !paused && gameStartTime.current) {\n      interval = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - gameStartTime.current!) / 1000);\n        const hours = Math.floor(elapsed / 3600);\n        const minutes = Math.floor((elapsed % 3600) / 60);\n        const seconds = elapsed % 60;\n        setGameTime({ hours, minutes, seconds });\n      }, 1000);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [gameStarted, paused]);\n\n  // Responsive canvas\n  useEffect(() => {\n    const handleResize = () => {\n      setMobile(isMobile());\n      // Calculate responsive dimensions while maintaining aspect ratio\n      const maxW = Math.min(window.innerWidth * 0.9, 1200);\n      const maxH = Math.min(window.innerHeight * 0.6, 700);\n      let width = maxW;\n      let height = width / GAME_RATIO;\n      if (height > maxH) {\n        height = maxH;\n        width = height * GAME_RATIO;\n      }\n      setCanvasDims({ width, height });\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Update canvas size when dimensions change\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = canvasDims.width;\n      canvas.height = canvasDims.height;\n    }\n  }, [canvasDims]);\n\n  // Keyboard controls (Desktop)\n  useEffect(() => {\n    if (mobile) return;\n    const downHandler = (e: KeyboardEvent) => {\n      keys.current[e.key.toLowerCase()] = true;\n    };\n    const upHandler = (e: KeyboardEvent) => {\n      keys.current[e.key.toLowerCase()] = false;\n    };\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [mobile]);\n\n  // Game loop\n  useEffect(() => {\n    if (!gameStarted || paused) return;\n    let animation: number;\n\n    const scaleX = canvasDims.width / GAME_WIDTH;\n    const scaleY = canvasDims.height / GAME_HEIGHT;\n\n    const draw = () => {\n      const ctx = canvasRef.current?.getContext(\"2d\");\n      if (!ctx) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvasDims.width, canvasDims.height);\n      \n      // Dark gradient background\n      const grad = ctx.createLinearGradient(0, 0, canvasDims.width, canvasDims.height);\n      grad.addColorStop(0, \"#23272f\");\n      grad.addColorStop(1, \"#15181e\");\n      ctx.fillStyle = grad;\n      ctx.fillRect(0, 0, canvasDims.width, canvasDims.height);\n\n      // Mid lines (cross style)\n      ctx.strokeStyle = \"rgba(255,255,255,0.08)\";\n      ctx.lineWidth = 2;\n      // Vertical\n      ctx.beginPath();\n      ctx.moveTo(canvasDims.width / 2, 0);\n      ctx.lineTo(canvasDims.width / 2, canvasDims.height);\n      ctx.stroke();\n      // Horizontal\n      ctx.beginPath();\n      ctx.moveTo(0, canvasDims.height / 2);\n      ctx.lineTo(canvasDims.width, canvasDims.height / 2);\n      ctx.stroke();\n\n      // Paddles\n      ctx.fillStyle = \"#fafbff\";\n      ctx.shadowColor = \"#20242a\";\n      ctx.shadowBlur = 7;\n      ctx.fillRect(\n        0, \n        paddle1Y.current * scaleY, \n        PADDLE_WIDTH * scaleX, \n        PADDLE_HEIGHT * scaleY\n      );\n      ctx.fillRect(\n        canvasDims.width - PADDLE_WIDTH * scaleX, \n        paddle2Y.current * scaleY, \n        PADDLE_WIDTH * scaleX, \n        PADDLE_HEIGHT * scaleY\n      );\n      ctx.shadowBlur = 0;\n\n      // Ball\n      ctx.beginPath();\n      ctx.arc(\n        ball.current.x * scaleX + (BALL_SIZE * scaleX) / 2,\n        ball.current.y * scaleY + (BALL_SIZE * scaleY) / 2,\n        (BALL_SIZE * scaleX) / 2,\n        0, Math.PI * 2\n      );\n      ctx.fillStyle = \"#f7f7fa\";\n      ctx.shadowColor = \"#fff\";\n      ctx.shadowBlur = 6;\n      ctx.fill();\n      ctx.shadowBlur = 0;\n    };\n\n    const update = () => {\n      // Move paddles - desktop or mobile\n      if (!mobile) {\n        if (keys.current[\"w\"] && paddle1Y.current > 0) paddle1Y.current -= PADDLE_SPEED;\n        if (keys.current[\"s\"] && paddle1Y.current < GAME_HEIGHT - PADDLE_HEIGHT) paddle1Y.current += PADDLE_SPEED;\n        if ((keys.current[\"arrowup\"] || keys.current[\"↑\"]) && paddle2Y.current > 0) paddle2Y.current -= PADDLE_SPEED;\n        if ((keys.current[\"arrowdown\"] || keys.current[\"↓\"]) && paddle2Y.current < GAME_HEIGHT - PADDLE_HEIGHT) paddle2Y.current += PADDLE_SPEED;\n      } else {\n        // Touch/mobile, button-based control\n        if (paddle1Move === \"up\" && paddle1Y.current > 0) paddle1Y.current -= PADDLE_SPEED;\n        if (paddle1Move === \"down\" && paddle1Y.current < GAME_HEIGHT - PADDLE_HEIGHT) paddle1Y.current += PADDLE_SPEED;\n        if (paddle2Move === \"up\" && paddle2Y.current > 0) paddle2Y.current -= PADDLE_SPEED;\n        if (paddle2Move === \"down\" && paddle2Y.current < GAME_HEIGHT - PADDLE_HEIGHT) paddle2Y.current += PADDLE_SPEED;\n      }\n\n      // Ball movement\n      ball.current.x += ball.current.dx;\n      ball.current.y += ball.current.dy;\n\n      // Wall collision\n      if (ball.current.y <= 0 || ball.current.y + BALL_SIZE >= GAME_HEIGHT) {\n        ball.current.dy *= -1;\n      }\n      // Left paddle collision\n      if (\n        ball.current.x <= PADDLE_WIDTH &&\n        ball.current.y + BALL_SIZE >= paddle1Y.current &&\n        ball.current.y <= paddle1Y.current + PADDLE_HEIGHT\n      ) {\n        ball.current.dx = Math.abs(ball.current.dx);\n      }\n      // Right paddle collision\n      if (\n        ball.current.x + BALL_SIZE >= GAME_WIDTH - PADDLE_WIDTH &&\n        ball.current.y + BALL_SIZE >= paddle2Y.current &&\n        ball.current.y <= paddle2Y.current + PADDLE_HEIGHT\n      ) {\n        ball.current.dx = -Math.abs(ball.current.dx);\n      }\n      // Scoring\n      if (ball.current.x < -BALL_SIZE) {\n        setScores((s) => ({ ...s, p2: s.p2 + 1 }));\n        resetBall(-1);\n      } else if (ball.current.x > GAME_WIDTH + BALL_SIZE) {\n        setScores((s) => ({ ...s, p1: s.p1 + 1 }));\n        resetBall(1);\n      }\n    };\n\n    const resetBall = (direction: number) => {\n      ball.current.x = GAME_WIDTH / 2 - BALL_SIZE / 2;\n      ball.current.y = GAME_HEIGHT / 2 - BALL_SIZE / 2;\n      // Give the ball a random Y direction each serve\n      const yDirection = (Math.random() > 0.5 ? 1 : -1) * BALL_SPEED;\n      ball.current.dx = BALL_SPEED * direction;\n      ball.current.dy = yDirection;\n    };\n\n    const loop = () => {\n      if (!paused) update();\n      draw();\n      animation = requestAnimationFrame(loop);\n    };\n\n    loop();\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, [gameStarted, paused, mobile, canvasDims, paddle1Move, paddle2Move]);\n\n  // Win condition - Updated for tournament mode with better winner object\n  useEffect(() => {\n    if (scores.p1 >= 7 || scores.p2 >= 7) {\n      setGameStarted(false);\n      setPaused(true);\n      \n      const winner = scores.p1 >= 7 ? safePlayer1 : safePlayer2;\n      \n      if (isTournamentMode) {\n        // For tournament mode, pass the complete winner object back\n        onExit(winner);\n      } else {\n        // For regular games, navigate to result pages\n        const winnerName = winner.name;\n        const loserName = scores.p1 >= 7 ? safePlayer2.name : safePlayer1.name;\n        \n        // Check if current user won (assuming player1 is always the user in 1v1 mode)\n        if (scores.p1 >= 7) {\n          window.location.href = `/play/result/win?winner=${encodeURIComponent(winnerName)}&loser=${encodeURIComponent(loserName)}`;\n        } else {\n          window.location.href = `/play/result/loss?winner=${encodeURIComponent(winnerName)}&loser=${encodeURIComponent(loserName)}`;\n        }\n      }\n    }\n  }, [scores, safePlayer1, safePlayer2, onExit, isTournamentMode]);\n\n  // Touch button event helpers\n  const handleMobilePress = (which: 'p1up' | 'p1down' | 'p2up' | 'p2down', isDown: boolean) => {\n    if (which === 'p1up') setPaddle1Move(isDown ? 'up' : '');\n    if (which === 'p1down') setPaddle1Move(isDown ? 'down' : '');\n    if (which === 'p2up') setPaddle2Move(isDown ? 'up' : '');\n    if (which === 'p2down') setPaddle2Move(isDown ? 'down' : '');\n  };\n\n  // Reset/exit helpers\n  const handleStart = () => {\n    setScores({ p1: 0, p2: 0 });\n    paddle1Y.current = GAME_HEIGHT / 2 - PADDLE_HEIGHT / 2;\n    paddle2Y.current = GAME_HEIGHT / 2 - PADDLE_HEIGHT / 2;\n    ball.current.x = GAME_WIDTH / 2 - BALL_SIZE / 2;\n    ball.current.y = GAME_HEIGHT / 2 - BALL_SIZE / 2;\n    ball.current.dx = BALL_SPEED * (Math.random() > 0.5 ? 1 : -1);\n    ball.current.dy = BALL_SPEED * (Math.random() > 0.5 ? 1 : -1);\n    setGameStarted(true);\n    setPaused(false);\n    gameStartTime.current = Date.now();\n  };\n\n  const handlePause = () => {\n    setPaused(true);\n  };\n\n  const handleResume = () => {\n    setPaused(false);\n  };\n\n  const handleExit = () => {\n    if (isTournamentMode) {\n      onExit(); // Exit without winner for tournament mode\n    } else {\n      onExit();\n    }\n  };\n\n  // UI helpers\n  const gameOver = scores.p1 >= 7 || scores.p2 >= 7;\n  const isGameActive = gameStarted && !paused && !gameOver;\n\n  return (\n    <div className=\"flex flex-col overflow-hidden\">\n      {/* Game Container - Full Screen */}\n      <div className=\"flex-1 flex flex-col\">\n        \n        {/* Game Canvas Container */}\n        <div className=\"flex-1 flex items-center justify-center p-4\">\n          <div\n            className=\"relative rounded-2xl border border-[#656872] bg-[#222429] shadow-2xl overflow-hidden\"\n            style={{\n              width: canvasDims.width,\n              height: canvasDims.height,\n            }}\n          >\n            <canvas\n              ref={canvasRef}\n              className=\"block w-full h-full\"\n              style={{\n                width: '100%',\n                height: '100%'\n              }}\n            />\n            \n            {/* Start Button Overlay */}\n            {!gameStarted && (\n              <div className=\"absolute inset-0 z-20 flex items-center justify-center\">\n                <button\n                  onClick={handleStart}\n                  className=\"flex items-center justify-center w-20 h-20 rounded-full bg-black/60 border-4 border-white/80 hover:bg-black/80 hover:scale-110 transition-all duration-150\"\n                >\n                  <svg width={40} height={40} viewBox=\"0 0 24 24\" fill=\"#fff\">\n                    <polygon points=\"8,6 19,12 8,18\" />\n                  </svg>\n                </button>\n              </div>\n            )}\n\n            {/* Pause Icon Overlay - Only shows pause icon */}\n            {gameStarted && paused && !gameOver && (\n              <div className=\"absolute inset-0 z-30 bg-black/60 flex items-center justify-center\">\n                <div className=\"flex items-center justify-center w-24 h-24 rounded-full bg-black/80 border-4 border-white/80\">\n                  <svg width={48} height={48} viewBox=\"0 0 24 24\" fill=\"#fff\">\n                    <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\" />\n                    <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\" />\n                  </svg>\n                </div>\n              </div>\n            )}\n            \n            {/* Mobile Controls */}\n            {mobile && isGameActive && (\n              <>\n                <div className=\"absolute left-2 top-1/2 transform -translate-y-1/2 flex flex-col gap-2 z-20\">\n                  <button\n                    className=\"w-12 h-12 bg-gray-800/80 rounded-lg text-white font-bold text-xl flex items-center justify-center touch-manipulation\"\n                    onTouchStart={() => handleMobilePress('p1up', true)}\n                    onTouchEnd={() => handleMobilePress('p1up', false)}\n                  >\n                    ↑\n                  </button>\n                  <button\n                    className=\"w-12 h-12 bg-gray-800/80 rounded-lg text-white font-bold text-xl flex items-center justify-center touch-manipulation\"\n                    onTouchStart={() => handleMobilePress('p1down', true)}\n                    onTouchEnd={() => handleMobilePress('p1down', false)}\n                  >\n                    ↓\n                  </button>\n                </div>\n                <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2 flex flex-col gap-2 z-20\">\n                  <button\n                    className=\"w-12 h-12 bg-gray-800/80 rounded-lg text-white font-bold text-xl flex items-center justify-center touch-manipulation\"\n                    onTouchStart={() => handleMobilePress('p2up', true)}\n                    onTouchEnd={() => handleMobilePress('p2up', false)}\n                  >\n                    ↑\n                  </button>\n                  <button\n                    className=\"w-12 h-12 bg-gray-800/80 rounded-lg text-white font-bold text-xl flex items-center justify-center touch-manipulation\"\n                    onTouchStart={() => handleMobilePress('p2down', true)}\n                    onTouchEnd={() => handleMobilePress('p2down', false)}\n                  >\n                    ↓\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Game Info Bar */}\n        <div className=\"p-4\">\n          {/* Timer */}\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"flex gap-2 sm:gap-4 text-center\">\n              <div className=\"bg-[#2a2f3a] rounded-lg px-2 sm:px-4 py-2 min-w-[60px] sm:min-w-[80px]\">\n                <div className=\"text-lg sm:text-2xl font-bold text-white\">{String(gameTime.hours).padStart(2, '0')}</div>\n                <div className=\"text-xs text-gray-400\">Hours</div>\n              </div>\n              <div className=\"bg-[#2a2f3a] rounded-lg px-2 sm:px-4 py-2 min-w-[60px] sm:min-w-[80px]\">\n                <div className=\"text-lg sm:text-2xl font-bold text-white\">{String(gameTime.minutes).padStart(2, '0')}</div>\n                <div className=\"text-xs text-gray-400\">Minutes</div>\n              </div>\n              <div className=\"bg-[#2a2f3a] rounded-lg px-2 sm:px-4 py-2 min-w-[60px] sm:min-w-[80px]\">\n                <div className=\"text-lg sm:text-2xl font-bold text-white\">{String(gameTime.seconds).padStart(2, '0')}</div>\n                <div className=\"text-xs text-gray-400\">Seconds</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Players and Score - Responsive Grid Layout */}\n          <div className=\"grid grid-cols-3 items-center gap-2 sm:gap-4 mb-4\">\n            {/* Player 1 - Left Column */}\n            <div className=\"flex items-center gap-2 sm:gap-3 justify-start\">\n              <img\n                src={safePlayer1.avatar}\n                alt={safePlayer1.name}\n                className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full border-2 border-blue-400 object-cover flex-shrink-0\"\n              />\n              <div className=\"min-w-0 flex-1\">\n                <h4 className=\"text-white font-semibold text-sm sm:text-xl md:text-2xl truncate\">\n                  {safePlayer1.name}\n                </h4>\n                <p className=\"text-gray-400 text-xs sm:text-sm md:text-lg truncate\">@{safePlayer1.nickname}</p>\n              </div>\n            </div>\n            \n            {/* Score - Center Column */}\n            <div className=\"text-center flex-shrink-0\">\n              <div className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-white whitespace-nowrap\">\n                {scores.p1} - {scores.p2}\n              </div>\n            </div>\n            \n            {/* Player 2 - Right Column */}\n            <div className=\"flex items-center gap-2 sm:gap-3 justify-end\">\n              <div className=\"min-w-0 flex-1 text-right\">\n                <h4 className=\"text-white font-semibold text-sm sm:text-xl md:text-2xl truncate\">\n                  {safePlayer2.name}\n                </h4>\n                <p className=\"text-gray-400 text-xs sm:text-sm md:text-lg truncate\">@{safePlayer2.nickname}</p>\n              </div>\n              <img\n                src={safePlayer2.avatar}\n                alt={safePlayer2.name}\n                className=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full border-2 border-blue-400 object-cover flex-shrink-0\"\n              />\n            </div>\n          </div>\n\n          {/* Game Controls */}\n          <div className=\"flex justify-center gap-2 sm:gap-4\">\n            {isGameActive && (\n              <button\n                onClick={handlePause}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 sm:px-8 py-2 sm:py-3 rounded-lg font-semibold transition-colors text-sm sm:text-base\"\n              >\n                Pause\n              </button>\n            )}\n            {gameStarted && paused && !gameOver && (\n              <button\n                onClick={handleResume}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 sm:px-8 py-2 sm:py-3 rounded-lg font-semibold transition-colors text-sm sm:text-base\"\n              >\n                Resume\n              </button>\n            )}\n            <button\n              onClick={handleExit}\n              className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 sm:px-8 py-2 sm:py-3 rounded-lg font-semibold transition-colors text-sm sm:text-base\"\n            >\n              Exit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":["file:///home/sleeps/ft_transcendence0/src/app/%28main%29/play/tournament/LocalTournament.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport { user } from '@/data/mockData';\nimport {MATCH_STATES} from '../../../../data/mockData';\nimport TournamentBracket from './TournamentBracket';\nimport {PingPongGame} from '../game/PingPongGame';\n\n// Tournament Bracket Component for Local Tournament\n\nconst ParticipantItem = ({ player, removeParticipant, changeParticipantName, changeParticipantNickname }: {\n  player: any;\n  removeParticipant: (id: string) => void;\n  changeParticipantName: (id: string, name: string) => void;\n  changeParticipantNickname: (id: string, nickname: string) => void;\n}) => {\n  return (\n    <div className=\"flex items-center bg-[#1a1d23] rounded-lg p-3 hover:bg-[#2a2f3a] transition-all border border-gray-700/50\">\n      <div className=\"w-10 h-10 rounded-full bg-[#2a2f3a] flex-shrink-0 overflow-hidden mr-3 border border-gray-600\">\n        <Image \n          src={player.avatar} \n          alt={player.name} \n          width={40}  \n          height={40}\n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      <div className=\"flex-grow space-y-2\">\n        <input \n          type=\"text\" \n          value={player.name}\n          onChange={(e) => changeParticipantName(player.id, e.target.value)}\n          className=\"bg-[#2a2f3a] text-white rounded-lg px-3 py-2 w-full outline-none focus:ring-2 focus:ring-blue-500 border border-gray-600 text-sm placeholder-gray-400\"\n          minLength={1}\n          required\n          placeholder=\"Enter player name\"\n        />\n        <input \n          type=\"text\" \n          value={player.nickname || ''}\n          onChange={(e) => changeParticipantNickname(player.id, e.target.value)}\n          className=\"bg-[#2a2f3a] text-gray-300 rounded-lg px-3 py-1 w-full outline-none focus:ring-2 focus:ring-blue-400 border border-gray-600 text-xs placeholder-gray-500\"\n          placeholder=\"Enter nickname (optional)\"\n        />\n      </div>\n      {!player.is_user && (\n        <button \n          onClick={() => removeParticipant(player.id)}\n          className=\"ml-2 text-red-400 hover:text-red-300 transition-colors p-1 rounded-lg hover:bg-red-400/10\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst RoundControls = ({ currentRound, totalRounds, onAdvanceRound, canAdvance }: {\n  currentRound: number;\n  totalRounds: number;\n  onAdvanceRound: () => void;\n  canAdvance: boolean;\n}) => {\n  return (\n    <div className=\"flex items-center justify-center mb-6 bg-[#1a1d23] rounded-lg p-4 border border-gray-700/50\">\n      <div className=\"flex items-center space-x-3\">\n        <span className=\"text-white text-lg\">Round:</span>\n        <span className=\"text-blue-400 font-bold text-xl\">{currentRound + 1}/{totalRounds}</span>\n      </div>\n      \n      <button\n        onClick={onAdvanceRound}\n        disabled={!canAdvance}\n        className={`ml-6 px-6 py-2 rounded-lg text-white font-medium transition-colors ${\n          canAdvance\n            ? 'bg-blue-600 hover:bg-blue-700'\n            : 'bg-gray-600 cursor-not-allowed opacity-50'\n        }`}\n      >\n        {currentRound + 1 === totalRounds ? \"End Tournament\" : \"Next Round\"}\n      </button>\n    </div>\n  );\n};\n\nconst LocalTournamentMode = () => {\n  const [participants, setParticipants] = useState([\n    { \n      id: crypto.randomUUID(), \n      name: user.name, \n      nickname: user.nickname || '', \n      avatar: user.avatar, \n      ready: true, \n      is_user: true\n    }\n  ]);\n  const [tournamentName, setTournamentName] = useState(\"Local Pong Championship\");\n  const [tournamentSize, setTournamentSize] = useState(4);\n  const [tournamentStarted, setTournamentStarted] = useState(false);\n  const [currentRound, setCurrentRound] = useState(0);\n  const [matches, setMatches] = useState<any[]>([]);\n  const [tournamentComplete, setTournamentComplete] = useState(false);\n  const [champion, setChampion] = useState<any>(null);\n  const [playingMatch, setPlayingMatch] = useState<any>(null);\n  const [showMatchResult, setShowMatchResult] = useState(false);\n  const [matchWinner, setMatchWinner] = useState<any>(null);\n  \n  const totalRounds = Math.log2(tournamentSize);\n  \n  // Helper function to get display name (nickname if available, otherwise name)\n  const getDisplayName = (player: any) => {\n    return player?.nickname?.trim() || player?.name || 'Unknown Player';\n  };\n  \n  // Initialize tournament matches\n  const initializeTournament = () => {\n    const initialMatches = [];\n    \n    // Create first round matches\n    for (let i = 0; i < tournamentSize / 2; i++) {\n      const player1 = participants[i * 2] || null;\n      const player2 = participants[i * 2 + 1] || null;\n      \n      initialMatches.push({\n        id: crypto.randomUUID(),\n        round: 0,\n        matchIndex: i,\n        player1: player1,\n        player2: player2,\n        state: MATCH_STATES.WAITING\n      });\n    }\n    \n    // Create placeholder matches for future rounds\n    for (let round = 1; round < totalRounds; round++) {\n      const matchesInRound = tournamentSize / Math.pow(2, round + 1);\n      \n      for (let i = 0; i < matchesInRound; i++) {\n        initialMatches.push({\n          id: crypto.randomUUID(),\n          round: round,\n          matchIndex: i,\n          player1: null,\n          player2: null,\n          state: MATCH_STATES.WAITING\n        });\n      }\n    }\n    \n    setMatches(initialMatches);\n    setTournamentStarted(true);\n  };\n  \n  // Update match state and propagate winners to next round\n  const handleMatchUpdate = (roundIndex: number, matchIndex: number, newState: string) => {\n    setMatches(prevMatches => {\n      const updatedMatches = [...prevMatches];\n      const matchToUpdateIndex = updatedMatches.findIndex(\n        m => m.round === roundIndex && m.matchIndex === matchIndex\n      );\n      \n      if (matchToUpdateIndex === -1) return prevMatches;\n      \n      const matchToUpdate = { ...updatedMatches[matchToUpdateIndex] };\n      matchToUpdate.state = newState;\n      updatedMatches[matchToUpdateIndex] = matchToUpdate;\n      \n      // If we have a winner, update next round's match\n      if (newState === MATCH_STATES.PLAYER1_WIN || newState === MATCH_STATES.PLAYER2_WIN) {\n        const winner = newState === MATCH_STATES.PLAYER1_WIN ? matchToUpdate.player1 : matchToUpdate.player2;\n        \n        // Check if this is the final match\n        if (roundIndex === totalRounds - 1) {\n          setChampion(winner);\n          setTournamentComplete(true);\n        }\n        // Calculate position in next round\n        else if (roundIndex < totalRounds - 1) {\n          const nextRound = roundIndex + 1;\n          const nextMatchIndex = Math.floor(matchIndex / 2);\n          const isFirstMatchOfPair = matchIndex % 2 === 0;\n          \n          const nextMatchIndex2 = updatedMatches.findIndex(\n            m => m.round === nextRound && m.matchIndex === nextMatchIndex\n          );\n          \n          if (nextMatchIndex2 !== -1) {\n            const nextMatch = { ...updatedMatches[nextMatchIndex2] };\n            \n            // Update player1 or player2 based on which match this was\n            if (isFirstMatchOfPair) {\n              nextMatch.player1 = winner;\n            } else {\n              nextMatch.player2 = winner;\n            }\n            \n            updatedMatches[nextMatchIndex2] = nextMatch;\n          }\n        }\n      }\n      \n      return updatedMatches;\n    });\n  };\n  \n  // Check if all matches in current round are completed\n  const canAdvanceRound = () => {\n    const currentRoundMatches = matches.filter(m => m.round === currentRound);\n    return currentRoundMatches.length > 0 && currentRoundMatches.every(m => \n      m.state === MATCH_STATES.PLAYER1_WIN || m.state === MATCH_STATES.PLAYER2_WIN\n    );\n  };\n  \n  // Get players who are still in the tournament (not eliminated)\n  const getActivePlayers = () => {\n    const eliminatedPlayerIds = new Set();\n    \n    // Find all eliminated players\n    matches.forEach(match => {\n      if (match.state === MATCH_STATES.PLAYER1_WIN && match.player2) {\n        eliminatedPlayerIds.add(match.player2.id);\n      } else if (match.state === MATCH_STATES.PLAYER2_WIN && match.player1) {\n        eliminatedPlayerIds.add(match.player1.id);\n      }\n    });\n    \n    // Return active players\n    return participants.filter(p => !eliminatedPlayerIds.has(p.id));\n  };\n  \n  // Advance to next round\n  const advanceRound = () => {\n    if (currentRound < totalRounds - 1) {\n      setCurrentRound(prevRound => prevRound + 1);\n    } else {\n      // Tournament is completed\n      const finalMatch = matches.find(m => m.round === totalRounds - 1 && m.matchIndex === 0);\n      if (finalMatch) {\n        const winner = finalMatch.state === MATCH_STATES.PLAYER1_WIN ? \n          finalMatch.player1 : finalMatch.player2;\n        setChampion(winner);\n      }\n      setTournamentComplete(true);\n    }\n  };\n  \n  const addParticipant = () => {\n    if (participants.length < tournamentSize) {\n      setParticipants([\n        ...participants,\n        { \n          id: crypto.randomUUID(),\n          name: `Player ${participants.length + 1}`, \n          nickname: '',\n          avatar: `/mghalmi.jpg`, \n          ready: true,\n          is_user: false\n        }\n      ]);\n    }\n  };\n  \n  const removeParticipant = (id: string) => {\n    if (participants.length > 1) {\n      setParticipants(participants.filter(player => player.id !== id));\n    }\n  };\n  \n  const changeParticipantName = (id: string, newName: string) => {\n    setParticipants(participants.map(player => \n      player.id === id ? { ...player, name: newName } : player\n    ));\n  };\n  \n  const changeParticipantNickname = (id: string, newNickname: string) => {\n    setParticipants(participants.map(player => \n      player.id === id ? { ...player, nickname: newNickname } : player\n    ));\n  };\n  \n  const startTournament = () => {\n    initializeTournament();\n  };\n  \n  const resetTournament = () => {\n    setTournamentStarted(false);\n    setCurrentRound(0);\n    setMatches([]);\n    setTournamentComplete(false);\n    setChampion(null);\n    setPlayingMatch(null);\n    setShowMatchResult(false);\n    setMatchWinner(null);\n  };\n\n  // Start a match in PingPongGame\n  const handlePlayMatch = (match: any) => {\n    setPlayingMatch(match);\n  };\n\n  // Handle winner from PingPongGame - Fixed with proper null checks\n  const handleGameEnd = (winner?: any) => {\n    // if (!playingMatch || !playingMatch.player1 || !playingMatch.player2) {\n    //   console.error('Invalid match or missing players');\n    //   return;\n    // }\n    \n    console.log('Game ended. Winner:', winner, 'Playing match:', playingMatch);\n    \n    // Enhanced validation with better error handling\n    if (!playingMatch) {\n      console.error('No playing match found');\n      return;\n    }\n\n    // If no winner is provided (game was exited), just go back to tournament\n    if (!winner) {\n      setPlayingMatch(null);\n      return;\n    }\n    \n    // Ensure winner has required properties\n    if (!winner.id) {\n      console.error('Winner missing id property');\n      return;\n    }\n    \n    // Set match winner and show result\n    setMatchWinner(winner);\n    setShowMatchResult(true);\n    \n    // Update match state - Fixed null checks\n    const matchState = winner.id === playingMatch.player1?.id \n      ? MATCH_STATES.PLAYER1_WIN \n      : MATCH_STATES.PLAYER2_WIN;\n    \n    handleMatchUpdate(playingMatch.round, playingMatch.matchIndex, matchState);\n  };\n\n  // Continue tournament after showing match result\n  const handleContinueTournament = () => {\n    setShowMatchResult(false);\n    setMatchWinner(null);\n    setPlayingMatch(null);\n  };\n\n  return (\n    <div className=\"h-full w-full text-white\">\n      <div className=\"flex items-center justify-center min-h-[calc(100vh-80px)] px-4\">\n        <div className=\"w-full max-w-md md:max-w-2xl lg:max-w-4xl xl:max-w-6xl\">\n            {(!playingMatch || showMatchResult) && (\n            <h1 className=\"text-center text-4xl md:text-5xl font-bold mb-8\">\n              {tournamentStarted ? tournamentName : \"Local Tournament\"}\n            </h1>\n            )}\n          \n          {!tournamentStarted && (\n            <div className=\"space-y-6\">\n              {/* Tournament Settings */}\n              <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n                <h2 className=\"text-2xl font-semibold mb-6\">Tournament Setup</h2>\n                \n                <div className=\"mb-6\">\n                  <label className=\"block text-gray-300 mb-2 text-lg\">Tournament Name</label>\n                  <input\n                    type=\"text\"\n                    value={tournamentName}\n                    onChange={(e) => setTournamentName(e.target.value)}\n                    className=\"bg-[#2a2f3a] text-white rounded-lg px-4 py-3 w-full outline-none focus:ring-2 focus:ring-blue-500 border border-gray-600 text-lg\"\n                    placeholder=\"Enter tournament name\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"mb-6\">\n                  <label className=\"block text-gray-300 mb-3 text-lg\">Tournament Size</label>\n                  <div className=\"grid grid-cols-3 gap-3\">\n                    {[4, 8, 16].map(size => (\n                      <button \n                        key={size} \n                        className={`py-3 px-4 rounded-lg font-medium transition-colors ${tournamentSize === size ? \n                          'bg-blue-600 text-white' : \n                          'bg-[#2a2f3a] text-gray-300 hover:bg-[#3a3f4a] border border-gray-600'}`}\n                        onClick={() => setTournamentSize(size)}\n                      >\n                        {size} Players\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Participants List */}\n              <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-2xl font-semibold text-white\">Participants ({participants.length}/{tournamentSize})</h3>\n                  <button\n                    onClick={addParticipant}\n                    disabled={participants.length >= tournamentSize}\n                    className={`px-6 py-2 rounded-lg font-medium transition-colors ${\n                      participants.length < tournamentSize\n                        ? 'bg-blue-600 hover:bg-blue-700 text-white'\n                        : 'bg-gray-600 cursor-not-allowed text-gray-400'\n                    }`}\n                  >\n                    Add Player\n                  </button>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  {participants.map(player => (\n                    <ParticipantItem\n                      key={player.id}\n                      player={player}\n                      removeParticipant={removeParticipant}\n                      changeParticipantName={changeParticipantName}\n                      changeParticipantNickname={changeParticipantNickname}\n                    />\n                  ))}\n                </div>\n                \n                {participants.length < tournamentSize && (\n                  <div className=\"text-yellow-400 text-sm mt-3\">\n                    You need to add {tournamentSize - participants.length} more players \n                  </div>\n                )}\n              </div>\n              \n              {/* Start Button */}\n              <div className=\"text-center\">\n                <button\n                  onClick={startTournament}\n                  disabled={participants.length < tournamentSize || !tournamentName}\n                  className={`w-full max-w-md text-white font-semibold rounded-lg py-4 text-xl transition-all ${\n                    participants.length >= tournamentSize && tournamentName &&\n                    !participants.some(participant => !participant.name || participant.name.trim() === '') &&\n                    new Set(participants.map(p => p.name?.trim())).size === participants.filter(p => p.name?.trim()).length\n                      ? 'bg-green-600 hover:bg-green-700'\n                      : 'bg-gray-600 cursor-not-allowed'\n                  }`}\n                >\n                  Start Tournament\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {/* Tournament Started View */}\n          {tournamentStarted && !tournamentComplete && (\n            <div className=\"space-y-6\">\n              {/* Match Result Modal */}\n              {showMatchResult && matchWinner && (\n                <div className=\"fixed inset-0 bg-black/80 flex items-center justify-center z-50\">\n                  <div className=\"bg-[#1a1d23] rounded-lg p-8 border border-gray-700/50 max-w-md w-full mx-4 text-center\">\n                    <div className=\"mb-6\">\n                      <div className=\"w-24 h-24 rounded-full bg-[#2a2f3a] overflow-hidden border-4 border-green-500 mx-auto mb-4\">\n                        <Image \n                          src={matchWinner.avatar || '/mghalmi.jpg'} \n                          alt={matchWinner.name || 'Winner'} \n                          width={96} \n                          height={96}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                      <h2 className=\"text-3xl font-bold text-white mb-2\">Match Winner!</h2>\n                      <div className=\"text-green-400 text-2xl font-bold mb-2\">\n                        {getDisplayName(matchWinner)}\n                      </div>\n                      {matchWinner.nickname && matchWinner.nickname !== matchWinner.name && (\n                        <div className=\"text-green-300 text-lg\">\n                          ({matchWinner.name})\n                        </div>\n                      )}\n                    </div>\n                    <p className=\"text-gray-300 mb-6\">\n                      {getDisplayName(matchWinner)} advances to the next round!\n                    </p>\n                    <button\n                      onClick={handleContinueTournament}\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-medium text-lg transition-colors\"\n                    >\n                      Continue Tournament\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* If a match is being played, show PingPongGame */}\n              {playingMatch && !showMatchResult ? (\n                <PingPongGame\n                  player1={playingMatch.player1}\n                  player2={playingMatch.player2}\n                  onExit={handleGameEnd}\n                  isTournamentMode={true}\n                />\n              ) : (\n                <>\n                  <RoundControls\n                    currentRound={currentRound}\n                    totalRounds={totalRounds}\n                    onAdvanceRound={advanceRound}\n                    canAdvance={canAdvanceRound()}\n                  />\n                  <TournamentBracket\n                    participants={participants}\n                    tournamentSize={tournamentSize}\n                    matches={matches}\n                    currentRound={currentRound}\n                    onMatchUpdate={handleMatchUpdate}\n                    onPlayMatch={handlePlayMatch}\n                  />\n                  \n                  <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n                    <h3 className=\"text-xl font-semibold text-white mb-4\">Active Players</h3>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-3\">\n                      {getActivePlayers().map(player => (\n                        <div key={player.id} className=\"flex flex-col items-center bg-[#2a2f3a] rounded-lg p-3 border border-gray-600\">\n                          <div className=\"w-12 h-12 rounded-full bg-[#3a3f4a] overflow-hidden border-2 border-green-500\">\n                            <Image \n                              src={player.avatar} \n                              alt={player.name} \n                              width={48} \n                              height={48}\n                              className=\"w-full h-full object-cover\"\n                            />\n                          </div>\n                          <div className=\"text-green-400 text-sm mt-2 truncate max-w-full font-medium\">\n                            {getDisplayName(player)}\n                          </div>\n                          {player.nickname && player.nickname !== player.name && (\n                            <div className=\"text-gray-400 text-xs truncate max-w-full\">\n                              ({player.name})\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n          \n          {/* Tournament Complete View */}\n          {tournamentComplete && (\n            <div className=\"text-center space-y-6\">\n              <div className=\"bg-[#1a1d23] rounded-lg p-8 border border-gray-700/50\">\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"bg-gradient-to-b from-yellow-400 to-yellow-600 p-2 rounded-full mb-6\">\n                    <div className=\"w-32 h-32 rounded-full bg-[#2a2f3a] overflow-hidden border-4 border-yellow-500\">\n                      <Image \n                        src={champion?.avatar || '/mghalmi.jpg'} \n                        alt={champion?.name || 'Champion'} \n                        width={128} \n                        height={128}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <h2 className=\"text-3xl font-bold text-white mb-2\">🏆 Tournament Champion</h2>\n                  <div className=\"text-yellow-400 text-4xl font-bold mb-2\">\n                    {champion ? getDisplayName(champion) : 'Unknown'}\n                  </div>\n                  {champion?.nickname && champion.nickname !== champion.name && (\n                    <div className=\"text-yellow-300 text-xl mb-6\">\n                      ({champion.name})\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <TournamentBracket\n                participants={participants}\n                tournamentSize={tournamentSize}\n                matches={matches}\n                currentRound={currentRound}\n                onMatchUpdate={() => {}} // No more updates allowed\n              />\n              \n              <div className=\"flex justify-center space-x-4\">\n                <button\n                  onClick={resetTournament}\n                  className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-lg transition-colors\"\n                >\n                  New Tournament\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LocalTournamentMode;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2583, "column": 0}, "map": {"version":3,"sources":["file:///home/sleeps/ft_transcendence0/src/app/%28main%29/play/tournament/OnlineTournament.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from 'next/image';\nimport { useState, useEffect } from 'react';\nimport { Search } from 'lucide-react';\nimport {MATCH_STATES} from '../../../../data/mockData';\nimport TournamentBracket from './TournamentBracket';\nimport { user, onlineFriends } from '@/data/mockData';\n\ninterface Player {\n  name: string;\n  avatar: string;\n  GameStatus: string;\n  nickname: string;\n}\n\ninterface OnlinePlayModeProps {\n  onInvitePlayer: (player: Player) => void;\n  pendingInvites: Map<string, any>;\n  sentInvites: Map<string, any>;\n}\n\nconst OnlinePlayMode = ({ onInvitePlayer, pendingInvites, sentInvites }: OnlinePlayModeProps) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [friends, setFriends] = useState(onlineFriends);\n  \n  // Filter online players based on search query\n  const filteredPlayers = friends.filter((player: Player) =>\n    player.name?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  \n  // Get button state for a player\n  const getPlayerButtonState = (player: Player) => {\n    if (pendingInvites.has(player.name)) {\n      return { text: 'Pending...', disabled: true, color: 'bg-yellow-600' };\n    }\n    if (sentInvites.has(player.name)) {\n      return { text: 'Invited', disabled: true, color: 'bg-blue-600' };\n    }\n    return { text: 'Invite', disabled: false, color: 'bg-green-600 hover:bg-green-700' };\n  };\n  \n  return (\n    <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n      <h3 className=\"text-white text-xl font-semibold mb-4\">Invite Players</h3>\n      \n      {/* Search Bar */}\n      <div className=\"relative mb-6\">\n        <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\n          <Search className=\"h-5 w-5 text-gray-400\" />\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Search for players...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"w-full pl-12 pr-4 py-3 bg-[#2a2f3a] text-white rounded-lg border border-gray-600 outline-none focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n        />\n      </div>\n      \n      {/* Online Players List */}\n      <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n        <h4 className=\"text-white text-lg font-medium mb-3\">Online Players</h4>\n        {filteredPlayers.length > 0 ? (\n          filteredPlayers.map((player: Player) => {\n            const buttonState = getPlayerButtonState(player);\n            const isAvailable = player.GameStatus === 'Available';\n            \n            return (\n              <div key={player.name} className=\"flex items-center justify-between p-3 hover:bg-[#2a2f3a] rounded-lg transition-colors border border-gray-700/50\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"relative\">\n                    <div className=\"w-10 h-10 rounded-full overflow-hidden border-2 border-gray-600\">\n                      <Image \n                        src={player.avatar} \n                        alt={player.name} \n                        width={40} \n                        height={40}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                    {/* Status indicator */}\n                    <div className={`absolute -bottom-1 -right-1 w-3 h-3 rounded-full border-2 border-[#1a1d23] ${\n                      player.GameStatus === 'Available' ? 'bg-green-500' : \n                      player.GameStatus === 'In a match' ? 'bg-yellow-500' : 'bg-red-500'\n                    }`}></div>\n                  </div>\n                  <div>\n                    <h3 className=\"text-white font-medium\">{player.name}</h3>\n                    <p className={`text-sm ${\n                      player.GameStatus === 'Available' ? 'text-green-400' : \n                      player.GameStatus === 'In a match' ? 'text-yellow-400' : 'text-gray-400'\n                    }`}>\n                      {player.GameStatus}\n                    </p>\n                  </div>\n                </div>\n                \n                <button \n                  onClick={() => onInvitePlayer(player)}\n                  disabled={buttonState.disabled || !isAvailable}\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors ${\n                    !isAvailable\n                      ? 'bg-gray-600 text-gray-400 cursor-not-allowed'\n                      : buttonState.disabled\n                      ? `${buttonState.color} text-white cursor-not-allowed`\n                      : `${buttonState.color} text-white`\n                  }`}\n                >\n                  {!isAvailable ? 'Unavailable' : buttonState.text}\n                </button>\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-400\">No players found matching your search.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ParticipantItem = ({ player, removeParticipant, isHost }: {\n  player: any;\n  removeParticipant: (nickname: string) => void;\n  isHost: boolean;\n}) => {\n  return (\n    <div className=\"flex items-center bg-[#1a1d23] rounded-lg p-3 hover:bg-[#2a2f3a] transition-all border border-gray-700/50\">\n      <div className=\"w-10 h-10 rounded-full bg-[#2a2f3a] flex-shrink-0 overflow-hidden mr-3 border border-gray-600\">\n        <Image \n          src={player.avatar} \n          alt={player.login} \n          width={40}  \n          height={40}\n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      <div className=\"flex-grow\">\n        <div className=\"text-white font-medium\">{player.login}</div>\n        {player.nickname && (\n          <div className=\"text-gray-400 text-sm\">{player.nickname}</div>\n        )}\n        {player.isHost && (\n          <div className=\"text-blue-400 text-xs\">Host</div>\n        )}\n      </div>\n      {!player.isHost && isHost && (\n        <button \n          onClick={() => removeParticipant(player.nickname)}\n          className=\"ml-2 text-red-400 hover:text-red-300 transition-colors p-1 rounded-lg hover:bg-red-400/10\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst RoundControls = ({ currentRound, totalRounds, onAdvanceRound, canAdvance }: {\n  currentRound: number;\n  totalRounds: number;\n  onAdvanceRound: () => void;\n  canAdvance: boolean;\n}) => {\n  return (\n    <div className=\"flex items-center justify-center mb-6 bg-[#1a1d23] rounded-lg p-4 border border-gray-700/50\">\n      <div className=\"flex items-center space-x-3\">\n        <span className=\"text-white text-lg\">Round:</span>\n        <span className=\"text-blue-400 font-bold text-xl\">{currentRound + 1}/{totalRounds}</span>\n      </div>\n      \n      <button\n        onClick={onAdvanceRound}\n        disabled={!canAdvance}\n        className={`ml-6 px-6 py-2 rounded-lg text-white font-medium transition-colors ${\n          canAdvance\n            ? 'bg-blue-600 hover:bg-blue-700'\n            : 'bg-gray-600 cursor-not-allowed opacity-50'\n        }`}\n      >\n        {currentRound + 1 === totalRounds ? \"End Tournament\" : \"Next Round\"}\n      </button>\n    </div>\n  );\n};\n\n// Main Tournament Component\nexport default function OnlineTournament() {\n  const [tournamentState, setTournamentState] = useState('setup'); // setup, lobby, in_progress\n  const [tournamentName, setTournamentName] = useState('Online Pong Championship');\n  const [tournamentSize, setTournamentSize] = useState(4);\n  const [currentRound, setCurrentRound] = useState(0);\n  const [participants, setParticipants] = useState([{\n    id: user.nickname, \n    login: user.name, \n    avatar: user.avatar,\n    nickname: user.nickname,\n    isHost: true\n  }]);\n  const [matches, setMatches] = useState([]);\n  const [sentInvites, setSentInvites] = useState(new Map());\n  const [pendingInvites, setPendingInvites] = useState(new Map());\n  const [tournamentComplete, setTournamentComplete] = useState(false);\n  const [champion, setChampion] = useState(null);\n\n  const totalRounds = Math.log2(tournamentSize);\n\n  // Helper function to get display name\n  const getDisplayName = (player: any) => {\n    return player?.nickname?.trim() || player?.login || 'Unknown Player';\n  };\n\n  // Handle match updates\n  const handleMatchUpdate = (roundIndex: number, matchIndex: number, newState: string) => {\n    setMatches(prevMatches => {\n      const updatedMatches = [...prevMatches];\n      const matchToUpdateIndex = updatedMatches.findIndex(\n        m => m.round === roundIndex && m.matchIndex === matchIndex\n      );\n      \n      if (matchToUpdateIndex === -1) return prevMatches;\n      \n      const matchToUpdate = { ...updatedMatches[matchToUpdateIndex] };\n      matchToUpdate.state = newState;\n      updatedMatches[matchToUpdateIndex] = matchToUpdate;\n      \n      // If we have a winner, update next round's match\n      if (newState === MATCH_STATES.PLAYER1_WIN || newState === MATCH_STATES.PLAYER2_WIN) {\n        const winner = newState === MATCH_STATES.PLAYER1_WIN ? matchToUpdate.player1 : matchToUpdate.player2;\n        \n        // Check if this is the final match\n        if (roundIndex === totalRounds - 1) {\n          setChampion(winner);\n          setTournamentComplete(true);\n        }\n        // Calculate position in next round\n        else if (roundIndex < totalRounds - 1) {\n          const nextRound = roundIndex + 1;\n          const nextMatchIndex = Math.floor(matchIndex / 2);\n          const isFirstMatchOfPair = matchIndex % 2 === 0;\n          \n          const nextMatchIndex2 = updatedMatches.findIndex(\n            m => m.round === nextRound && m.matchIndex === nextMatchIndex\n          );\n          \n          if (nextMatchIndex2 !== -1) {\n            const nextMatch = { ...updatedMatches[nextMatchIndex2] };\n            \n            // Update player1 or player2 based on which match this was\n            if (isFirstMatchOfPair) {\n              nextMatch.player1 = winner;\n            } else {\n              nextMatch.player2 = winner;\n            }\n            \n            updatedMatches[nextMatchIndex2] = nextMatch;\n          }\n        }\n      }\n      \n      return updatedMatches;\n    });\n  };\n\n  // Check if all matches in current round are completed\n  const canAdvanceRound = () => {\n    const currentRoundMatches = matches.filter(m => m.round === currentRound);\n    return currentRoundMatches.length > 0 && currentRoundMatches.every(m => \n      m.state === MATCH_STATES.PLAYER1_WIN || m.state === MATCH_STATES.PLAYER2_WIN\n    );\n  };\n\n  // Advance to next round\n  const advanceRound = () => {\n    if (currentRound < totalRounds - 1) {\n      setCurrentRound(prevRound => prevRound + 1);\n    } else {\n      // Tournament is completed\n      const finalMatch = matches.find(m => m.round === totalRounds - 1 && m.matchIndex === 0);\n      if (finalMatch) {\n        const winner = finalMatch.state === MATCH_STATES.PLAYER1_WIN ? \n          finalMatch.player1 : finalMatch.player2;\n        setChampion(winner);\n      }\n      setTournamentComplete(true);\n    }\n  };\n\n  // Start tournament logic\n  const startTournament = () => {\n    if (participants.length < tournamentSize) {\n      alert(`You need ${tournamentSize} players to start the tournament!`);\n      return;\n    }\n    \n    // Initialize tournament bracket\n    const initialMatches = [];\n    \n    // Create first round matches\n    for (let i = 0; i < tournamentSize / 2; i++) {\n      const player1 = participants[i * 2] || null;\n      const player2 = participants[i * 2 + 1] || null;\n      \n      initialMatches.push({\n        id: crypto.randomUUID(),\n        round: 0,\n        matchIndex: i,\n        player1: player1,\n        player2: player2,\n        state: MATCH_STATES.WAITING\n      });\n    }\n    \n    // Create placeholder matches for future rounds\n    for (let round = 1; round < totalRounds; round++) {\n      const matchesInRound = tournamentSize / Math.pow(2, round + 1);\n      \n      for (let i = 0; i < matchesInRound; i++) {\n        initialMatches.push({\n          id: crypto.randomUUID(),\n          round: round,\n          matchIndex: i,\n          player1: null,\n          player2: null,\n          state: MATCH_STATES.WAITING\n        });\n      }\n    }\n    \n    setMatches(initialMatches);\n    setTournamentState('in_progress');\n  };\n\n  // Invite a specific player to tournament\n  const handleInvitePlayer = (player: Player) => {\n    if (participants.length >= tournamentSize) {\n      alert('Tournament is full!');\n      return;\n    }\n    \n    // Add to sent invites\n    setSentInvites(prev => new Map(prev).set(player.name, {\n      player,\n      timestamp: Date.now()\n    }));\n    \n    // Simulate invitation response after 2 seconds\n    setTimeout(() => {\n      const accepted = Math.random() > 0.3; // 70% chance of acceptance\n      \n      if (accepted) {\n        // Remove from sent invites and add player to participants\n        setSentInvites(prev => {\n          const newMap = new Map(prev);\n          newMap.delete(player.name);\n          return newMap;\n        });\n        \n        // Add player to participants\n        setParticipants(prev => {\n          if (prev.some(p => p.nickname === player.nickname)) return prev;\n          return [...prev, {\n            id: player.nickname,\n            login: player.name,\n            avatar: player.avatar,\n            nickname: player.nickname,\n            isHost: false\n          }];\n        });\n      } else {\n        // Remove from sent invites\n        setSentInvites(prev => {\n          const newMap = new Map(prev);\n          newMap.delete(player.name);\n          return newMap;\n        });\n        alert(`${player.name} declined the tournament invitation.`);\n      }\n    }, 2000);\n  };\n\n  // Leave tournament\n  const leaveTournament = () => {\n    setParticipants([{\n      id: user.nickname, \n      login: user.name, \n      avatar: user.avatar,\n      nickname: user.nickname,\n      isHost: true\n    }]);\n    setMatches([]);\n    setCurrentRound(0);\n    setTournamentState('setup');\n    setSentInvites(new Map());\n    setPendingInvites(new Map());\n    setTournamentComplete(false);\n    setChampion(null);\n  };\n\n  // Remove participant (host only)\n  const removeParticipant = (playerNickname: string) => {\n    if (playerNickname === user.nickname) return; // Can't remove host\n    setParticipants(prev => prev.filter(p => p.nickname !== playerNickname));\n  };\n\n  // Reset tournament\n  const resetTournament = () => {\n    leaveTournament();\n  };\n\n  // Get players who are still in the tournament (not eliminated)\n  const getActivePlayers = () => {\n    const eliminatedPlayerIds = new Set();\n    \n    // Find all eliminated players\n    matches.forEach(match => {\n      if (match.state === MATCH_STATES.PLAYER1_WIN && match.player2) {\n        eliminatedPlayerIds.add(match.player2.id);\n      } else if (match.state === MATCH_STATES.PLAYER2_WIN && match.player1) {\n        eliminatedPlayerIds.add(match.player1.id);\n      }\n    });\n    \n    // Return active players\n    return participants.filter(p => !eliminatedPlayerIds.has(p.id));\n  };\n\n  return (\n    <div className=\"h-full w-full text-white\">\n      <div className=\"flex items-center justify-center min-h-[calc(100vh-80px)] px-4\">\n        <div className=\"w-full max-w-md md:max-w-2xl lg:max-w-4xl xl:max-w-6xl\">\n          <h1 className=\"text-center text-4xl md:text-5xl font-bold mb-8\">\n            {tournamentState === 'setup' ? \"Online Tournament\" : tournamentName}\n          </h1>\n          \n          {/* Tournament Setup Section */}\n          {tournamentState === 'setup' && (\n            <div className=\"space-y-6\">\n              {/* Tournament Settings */}\n              <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n                <h2 className=\"text-2xl font-semibold mb-6\">Tournament Setup</h2>\n                \n                <div className=\"mb-6\">\n                  <label className=\"block text-gray-300 mb-2 text-lg\">Tournament Name</label>\n                  <input\n                    type=\"text\"\n                    value={tournamentName}\n                    onChange={(e) => setTournamentName(e.target.value)}\n                    className=\"bg-[#2a2f3a] text-white rounded-lg px-4 py-3 w-full outline-none focus:ring-2 focus:ring-blue-500 border border-gray-600 text-lg\"\n                    placeholder=\"Enter tournament name\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"mb-6\">\n                  <label className=\"block text-gray-300 mb-3 text-lg\">Tournament Size</label>\n                  <div className=\"grid grid-cols-3 gap-3\">\n                    {[4, 8, 16].map(size => (\n                      <button \n                        key={size} \n                        className={`py-3 px-4 rounded-lg font-medium transition-colors ${tournamentSize === size ? \n                          'bg-blue-600 text-white' : \n                          'bg-[#2a2f3a] text-gray-300 hover:bg-[#3a3f4a] border border-gray-600'}`}\n                        onClick={() => setTournamentSize(size)}\n                      >\n                        {size} Players\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Create Button */}\n              <div className=\"text-center\">\n                <button\n                  onClick={() => setTournamentState('lobby')}\n                  disabled={!tournamentName || tournamentName.trim().length === 0}\n                  className={`w-full max-w-md text-white font-semibold rounded-lg py-4 text-xl transition-all ${\n                    tournamentName && tournamentName.trim().length !== 0\n                      ? 'bg-green-600 hover:bg-green-700'\n                      : 'bg-gray-600 cursor-not-allowed'\n                  }`}\n                >\n                  Create Tournament\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {/* Tournament Lobby Section */}\n          {tournamentState === 'lobby' && (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Tournament Info and Participants */}\n              <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h3 className=\"text-2xl font-semibold text-white\">Tournament Lobby</h3>\n                  <div className=\"flex items-center space-x-4\">\n                    <span className=\"px-3 py-1 bg-yellow-600/70 rounded-full text-white text-sm font-medium\">\n                      Waiting for Players\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"mb-6\">\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <h4 className=\"text-white text-lg font-medium\">Participants ({participants.length}/{tournamentSize})</h4>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 mb-6\">\n                    {participants.map((player) => (\n                      <ParticipantItem\n                        key={player.id}\n                        player={player}\n                        removeParticipant={removeParticipant}\n                        isHost={true}\n                      />\n                    ))}\n                    \n                    {/* Empty slots */}\n                    {Array.from({ length: tournamentSize - participants.length }).map((_, index) => (\n                      <div key={`empty-${index}`} className=\"flex items-center justify-center bg-[#1a1d23] rounded-lg p-3 border border-gray-700/50 border-dashed min-h-[58px]\">\n                        <div className=\"text-gray-400\">Waiting for player...</div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {participants.length < tournamentSize && (\n                    <div className=\"text-yellow-400 text-sm mb-4\">\n                      You need to invite {tournamentSize - participants.length} more players\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={leaveTournament}\n                    className=\"flex-1 px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors\"\n                  >\n                    Cancel Tournament\n                  </button>\n                  <button\n                    onClick={startTournament}\n                    disabled={participants.length < tournamentSize}\n                    className={`flex-1 px-6 py-3 rounded-lg font-medium transition-colors ${\n                      participants.length >= tournamentSize\n                        ? 'bg-green-600 hover:bg-green-700 text-white'\n                        : 'bg-gray-600 cursor-not-allowed text-gray-400'\n                    }`}\n                  >\n                    Start Tournament\n                  </button>\n                </div>\n              </div>\n              \n              {/* Online Player Search and Invite */}\n              <OnlinePlayMode \n                onInvitePlayer={handleInvitePlayer} \n                pendingInvites={pendingInvites}\n                sentInvites={sentInvites}\n              />\n            </div>\n          )}\n          \n          {/* Tournament Progress Section */}\n          {tournamentState === 'in_progress' && !tournamentComplete && (\n            <div className=\"space-y-6\">\n              <RoundControls\n                currentRound={currentRound}\n                totalRounds={totalRounds}\n                onAdvanceRound={advanceRound}\n                canAdvance={canAdvanceRound()}\n              />\n              \n              <TournamentBracket\n                participants={participants}\n                tournamentSize={tournamentSize}\n                matches={matches}\n                currentRound={currentRound}\n                onMatchUpdate={handleMatchUpdate}\n              />\n              \n              <div className=\"bg-[#1a1d23] rounded-lg p-6 border border-gray-700/50\">\n                <h3 className=\"text-xl font-semibold text-white mb-4\">Active Players</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-3\">\n                  {getActivePlayers().map(player => (\n                    <div key={player.id} className=\"flex flex-col items-center bg-[#2a2f3a] rounded-lg p-3 border border-gray-600\">\n                      <div className=\"w-12 h-12 rounded-full bg-[#3a3f4a] overflow-hidden border-2 border-green-500\">\n                        <Image \n                          src={player.avatar} \n                          alt={player.login} \n                          width={48} \n                          height={48}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                      <div className=\"text-green-400 text-sm mt-2 truncate max-w-full font-medium\">\n                        {getDisplayName(player)}\n                      </div>\n                      {player.nickname && player.nickname !== player.login && (\n                        <div className=\"text-gray-400 text-xs truncate max-w-full\">\n                          ({player.login})\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Tournament Complete View */}\n          {tournamentComplete && (\n            <div className=\"text-center space-y-6\">\n              <div className=\"bg-[#1a1d23] rounded-lg p-8 border border-gray-700/50\">\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"bg-gradient-to-b from-yellow-400 to-yellow-600 p-2 rounded-full mb-6\">\n                    <div className=\"w-32 h-32 rounded-full bg-[#2a2f3a] overflow-hidden border-4 border-yellow-500\">\n                      <Image \n                        src={champion?.avatar || '/mghalmi.jpg'} \n                        alt={champion?.login || 'Champion'} \n                        width={128} \n                        height={128}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <h2 className=\"text-3xl font-bold text-white mb-2\">🏆 Tournament Champion</h2>\n                  <div className=\"text-yellow-400 text-4xl font-bold mb-2\">\n                    {champion ? getDisplayName(champion) : 'Unknown'}\n                  </div>\n                  {champion?.nickname && champion.nickname !== champion.login && (\n                    <div className=\"text-yellow-300 text-xl mb-6\">\n                      ({champion.login})\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <TournamentBracket\n                participants={participants}\n                tournamentSize={tournamentSize}\n                matches={matches}\n                currentRound={currentRound}\n                onMatchUpdate={() => {}} // No more updates allowed\n              />\n              \n              <div className=\"flex justify-center space-x-4\">\n                <button\n                  onClick={resetTournament}\n                  className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-lg transition-colors\"\n                >\n                  New Tournament\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3670, "column": 0}, "map": {"version":3,"sources":["file:///home/sleeps/ft_transcendence0/src/app/%28main%29/play/tournament/page.tsx"],"sourcesContent":["\"use client\"\nimport { useEffect, useState } from \"react\";\nimport LocalTournament from \"./LocalTournament\";\nimport OnlineTournament from \"./OnlineTournament\";\nimport { notFound, useSearchParams } from 'next/navigation';\n\n\n// Main Component\nexport default function TournamentPage() {\n const searchParams = useSearchParams();\n  const [gameMode, setGameMode] = useState<\"Local\" | \"Online\" | null>(null);\n\n  useEffect(() => {\n    const modeParam = searchParams.get('mode');\n    if (modeParam === 'Local' || modeParam === 'Online') {\n      setGameMode(modeParam as \"Local\" | \"Online\");\n    } else {\n      notFound();\n    }\n  }, [searchParams]);\n\n     return (\n      <>\n        {gameMode === 'Local' ? (\n          <LocalTournament />\n        ) : gameMode === 'Online' ? (\n          <OnlineTournament />\n        ) : null}\n      </>\n    )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAQe,SAAS;IACvB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAClC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA6B;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,IAAI,cAAc,WAAW,cAAc,UAAU;YACnD,YAAY;QACd,OAAO;YACL,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;QACT;IACF,GAAG;QAAC;KAAa;IAEd,qBACC;kBACG,aAAa,wBACZ,8OAAC,gKAAA,CAAA,UAAe;;;;mBACd,aAAa,yBACf,8OAAC,iKAAA,CAAA,UAAgB;;;;mBACf;;AAGZ","debugId":null}}]
}